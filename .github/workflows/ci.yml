name: CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    name: Build and analyse using xcodebuild
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        env:
          scheme: ${{ 'default' }}
        run: |
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild clean build analyze -scheme "HockeyDrills Watch App" -"$filetype_parameter" "$file_to_build" | xcpretty && exit ${PIPESTATUS[0]}
  r2-deploy:
    name: Deploy to R2
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Pull CF secrets from Vault
          uses: hashicorp/vault-action@v2
          with:
            url: https://vault.polaris.rest
            role: dns
            path: github
            method: jwt
            jwtGithubAudience: sigstore
            secrets: |
              /ci-cd/hockeydrills/cloudflare R2_ACCOUNT_ID
              /ci-cd/hockeydrills/cloudflare R2_ACCESS_KEY_ID
              /ci-cd/hockeydrills/cloudflare R2_SECRET_ACCESS_KEY
              /ci-cd/hockeydrills/cloudflare R2_BUCKET
        - name: Upload configs to R2
          uses: ryand56/r2-upload-action@latest
          with:
            r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
            r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
            r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
            r2-bucket: ${{ secrets.R2_BUCKET }}
            source-dir: R2Drills
            destination-dir: ./hockeydrills